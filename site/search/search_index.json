{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation","text":"<p>This website holds documentation for intelligent textbook developed by ALOE.</p> <ul> <li> <p>Data Collection</p> </li> <li> <p>Development Notes</p> </li> </ul>"},{"location":"data/","title":"Data Collection","text":"<p>We collect data.</p>"},{"location":"data/focus/","title":"Focus Time","text":"<p>Focus time (the duration where something is visible in a user's viewport) is tracked on a per-section-element basis. When the user enters a section, the visible time of every text paragraph, figure and video elements get is recorded. The css selector used is</p> <pre><code>content.querySelectorAll(\"h1, h2, p, img, video, iframe\")\n</code></pre> <p>Every element is then assigned an integer id starting from zero with the being order the same as their order on the page.</p> <p>The entire collection of all the visibility times of all elements in the section is sent to firebase at a 60s interval. The visibility data of an element looks like</p> <pre><code>{\n// a combination of the element's type and the first 10 characters of its content nodeType--first10characters\n\"id\": \"H1--Overview\",\n// which subsection the element belongs to, e.g. the nearest previous h1 heading\n\"subSection\": \"Overview\",\n// timestamp of when the element becomes visible for the last time\n\"lastViewStarted\": 74143.5,\n// total view time during the 60s interval\n\"totalViewTime\": 27000,\n// if the element is visible at the time of sending\n\"visible\": false\n},\n</code></pre> <p>If a user leaves the page, by switching to another tab or close the browser, the timer automatically pauses.</p>"},{"location":"data/focus/#sample-data","title":"Sample data","text":"<pre><code>{\n\"uid\": \"APgf5SYmkkXu1d13fw25K4BxyRI3\",\n\"startTime\": \"January 13, 2023 at 11:13:19 AM UTC-6\",\n\"endTime\": \"January 13, 2023 at 11:13:49 AM UTC-6\",\n\"location\": {\n\"module\": 1,\n\"chapter\": 1,\n\"section\": 3\n},\n\"elements\": [\n{\n\"id\": \"H1--Overview\",\n\"lastViewStarted\": 2405.2999999523163,\n\"subSection\": \"Overview\",\n\"totalViewTime\": 0,\n\"visible\": false,\n},\n{\n\"id\": \"P--Data is very importa\",\n\"lastViewStarted\": 57660.5,\n\"subSection\": \"Introduction to FRED\",\n\"totalViewTime\": 1092.3999999761581,\n\"visible\": false\n},\n{\n\"id\": \"video--\",\n\"lastViewStarted\": 58910.799999952316,\n\"subSection\": \"Why Study Economics?\",\n\"totalViewTime\": 5719.100000023842\n\"visible\": false\n}\n// other elements on the page\n...\n]\n}\n</code></pre>"},{"location":"data/ga/","title":"Google Analytics","text":"<p>https://analytics.google.com/analytics/web/?authuser=1#/p335256466/reports/intelligenthome</p>"},{"location":"data/ga/#traffic-sources","title":"Traffic sources","text":"<p>How did the user access our website, e.g., direct visit, through search engine or external links. And where the user comes from, e.g. region, time zones.</p>"},{"location":"data/ga/#page-visits","title":"Page visits","text":"<p>Page view counts, up to per section in the textbook.</p>"},{"location":"data/ga/#scroll-depth","title":"Scroll depth","text":"<p>25%, 50%, 75% scroll depth.</p>"},{"location":"data/ga/#video-watches","title":"Video watches","text":"<p>Video watch counts of every embedded youtube video.</p>"},{"location":"data/identity/","title":"Identity Management","text":"<p>When a user first logs in he/she is required to input some identity data. Currently we only support logins via one's google account. Other methods will be added later, e.g., email-password, phone number or via other social providers.</p>"},{"location":"data/identity/#sample-data","title":"Sample data","text":"<p>User data is stored in two places, firebase's built-in user pool and firestore.</p> <p>The user pool stores what is returned from the identity provider. For example, a user created via google login has</p> <pre><code>{\n\"uid\": \"APgf5SYmkkXu1d13fw25K4BxyRI3\",\n\"email\": \"lear.lab.vu@gmail.com\",\n\"emailVerified\": true,\n\"displayName\": \"Scott Crossley\",\n\"isAnonymous\": false,\n\"photoURL\": \"https://lh3.googleusercontent.com/a/ALm5wu2RrwzPQYe1IZYKGuwug6BmvBROfV3kmyAiCb77=s96-c\",\n\"providerData\": [\n{\n\"providerId\": \"google.com\",\n\"uid\": \"112168403617264073813\",\n\"displayName\": \"Scott Crossley\",\n\"email\": \"lear.lab.vu@gmail.com\",\n\"phoneNumber\": null,\n\"photoURL\": \"https://lh3.googleusercontent.com/a/AEdFTp7GuDRSryTEoiSFSw45MUubMB-3a87030KOfSxi=s96-c\"\n}\n],\n\"stsTokenManager\": {\n\"refreshToken\": \"some token\",\n\"accessToken\": \"some token\",\n\"expirationTime\": 1672719819067\n},\n\"createdAt\": \"1666046663358\",\n\"lastLoginAt\": \"1672716219080\",\n\"apiKey\": \"some api key\",\n\"appName\": \"[DEFAULT]\"\n}\n</code></pre> <p>Firestore stores business-relevant user data.</p> <pre><code>{\n\"displayName\": \"jane doe\",\n\"email\":  \"jane@gmail.com\",\n// the user's current progress submitting summaries, incremented everytime when the user submits a new successful\n\"location\": {\n\"module\": 1,\n\"chapter\": 1,\n\"section\": 4,\n},\n\"photoURL\": \"https://lh3.googleusercontent.com/a/ALm5wu08JCkPL9PCJEEfQhuIfOr1kV4fS534NAc74jBC7Q=s96-c\",\n// an array of sucessful summaries\n\"summaries\": []\n}\n</code></pre>"},{"location":"data/keystrokes/","title":"Keystroke Logging","text":"<p>Keystroke logging is recorded at every key-press and key-release event when the user focuses on the summary text field. Each key-press and key-release forms a pair that is one row in a keystroke record, and all the keystrokes will be submitted in batch once a summary has been made, regardless of whether it has passed the test.</p> <p>We also keep track of who (<code>uid</code>) and where (<code>module</code>, <code>chapter</code>, <code>section</code>) the keystrokes are submitted.</p>"},{"location":"data/keystrokes/#sample-data","title":"Sample data","text":"<pre><code>{\n\"uid\": \"hu8NH9M1aNRfWr5PJjOAA87qJF82\",\n\"location\": {\n\"module\" : 1,\n\"chapter\": 1,\n\"section\": 1,\n},\n\"keystrokes\": [\n{\n\"downKey\": \"v\",\n\"downTime\": \"15297.40000000596\",\n\"duration\": 131.7000000178814,\n\"eventId\": 1,\n\"upKey\": \"v\",\n\"upTime\" 15429.100000023842\n}\n]\n}\n</code></pre>"},{"location":"data/summary/","title":"Summary","text":"<p>A summary record contains its text content alongside its score. Summary is sent to firestore once a summary has been made and passes the requirement for the minimum number of words and language detection, regardless of whether it passes the quality check.</p> <p>Physically the summaries are stored as an array of the <code>users</code> collection.</p> <pre><code>{\n\"displayName\": \"jane doe\",\n\"email\":  \"jane@gmail.com\",\n// other user attributes\n...,\n\"summaries\": [\n{\n\"location\": {\n\"module\": 1,\n\"chapter\": 1,\n\"section\": 1\n},\n\"text\": \"sample text that is English and more than 50 words\",\n// unix timestamp\n\"timestamp\": 1666125567096\n}\n]\n}\n</code></pre>"},{"location":"development/content/","title":"Add Textbook Content","text":"<p>Hongyu will add more to this.</p>"},{"location":"development/dependency/","title":"Starting the website","text":""},{"location":"development/dependency/#install-nodejs-and-yarn","title":"Install node.js and yarn","text":"<p>Install node.js from https://nodejs.org/en/, then install yarn by running the following command in your terminal</p> <pre><code>npm install -g yarn\n</code></pre>"},{"location":"development/dependency/#install-packages","title":"Install packages","text":"<p>After cloning the textbook's repository, you can install all the dependencies for this project with yarn (see the previous section)</p> <pre><code>git clone https://github.com/aialoe/macro-economics-textbook\ncd macro-economics-textbook\nyarn install\n</code></pre>"},{"location":"development/dependency/#start-the-server","title":"Start the server","text":"<p>After installation ends, verify your setup by running</p> <pre><code>yarn dev\n</code></pre> <p>It may take some minutes to start the project for the first time, if you see the following messages in the end it means things are working</p> <pre><code>success run static queries - 0.029s - 2/2 68.56/s\nsuccess run page queries - 0.009s - 3/3 319.64/s\n\u2800\nYou can now view principles-of-macroeconomics in the browser.\n\u2800\n  http://localhost:8000/\n\u2800\nView GraphiQL, an in-browser IDE, to explore your site's data and schema\n\u2800\n  http://localhost:8000/___graphql\n\u2800\nNote that the development build is not optimized.\nTo create a production build, use gatsby build\n</code></pre> <p>Finally, navigate to http://localhost:8000/, if everything is set up correctly you will see the textbook's homepage similar as what is shown below.</p> <p></p>"},{"location":"development/firebase/","title":"Connecting to Firebase","text":""},{"location":"development/firebase/#python","title":"Python","text":"<p>Install the <code>firebase_admin</code> library and download the firebase credentials at https://console.firebase.google.com/u/0/project/textbook-demo/settings/serviceaccounts/adminsdk</p> <pre><code>import firebase_admin\nfrom firebase_admin import credentials\n\ncred = credentials.Certificate(\"path/to/serviceAccountKey.json\")\nfirebase_admin.initialize_app(cred)\n</code></pre>"}]}